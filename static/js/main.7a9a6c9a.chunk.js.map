{"version":3,"sources":["app/Controllers/Controllers.js","app/ToDoList/ToDoElement/ToDoElement.js","app/ToDoList/ToDoList.js","app/App.js","index.js"],"names":["Controllers","setToDos","toDos","inputValue","useRef","addElement","userInput","current","value","previousToDos","id","uuidv4","content","isComplete","className","type","ref","onKeyDown","event","key","onClick","filteredCopy","filter","toDoCopy","ToDoElement","toDo","checked","onChange","toDosCopy","find","target","style","backgroundColor","ToDoList","map","LOCAL_STORAGE_KEY","App","useState","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NA0DeA,EAvDK,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACvBC,EAAaC,mBAEbC,EAAa,WACf,IAAMC,EAAYH,EAAWI,QAAQC,MACrCL,EAAWI,QAAQC,MAAQ,GAC3BP,GAAS,SAAAQ,GAEL,MAAM,GAAN,mBAEOA,GAFP,CAII,CACIC,GAAIC,cACJC,QAASN,EACTO,YAAY,SAoB5B,OACI,+BACI,sBAAKC,UAAU,YAAf,UACI,uBAAOC,KAAK,OAAOC,IAAKb,EAAYc,UAjB/B,SAAAC,GACK,UAAdA,EAAMC,KAAiBd,OAiBnB,sBAAKS,UAAU,UAAf,UACI,wBAAQM,QAASf,EAAjB,SACI,mBAAGS,UAAU,yBAEjB,wBAAQM,QAlBN,WACd,IACMC,EADS,YAAOnB,GACSoB,QAAO,SAAAC,GAAQ,OAAKA,EAASV,cAC5DZ,EAASoB,IAeG,SACI,mBAAGP,UAAU,mBAEjB,wBAAQM,QAfL,WACfnB,EAAS,KAcG,SACI,mBAAGa,UAAU,gCC1BtBU,EAxBK,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMvB,EAAsB,EAAtBA,MAAOD,EAAe,EAAfA,SAYhC,OACI,+BACI,uBAAOc,KAAK,WAAWW,QAASD,EAAKZ,WAAYc,SAbrC,SAAAT,GAChB,IAAMU,EAAS,YAAO1B,GAChBqB,EAAWK,EAAUC,MAAK,SAAAN,GAAQ,OAAIA,EAASb,KAAOe,EAAKf,MACjEa,EAASV,YAAcU,EAASV,WAEhCU,EAASV,WACLK,EAAMY,OAAOC,MAAMC,gBAAkB,UACnCd,EAAMY,OAAOC,MAAMC,gBAAkB,OAC3C/B,EAAS2B,MAML,gCACI,+BACKH,EAAKb,gBCPXqB,EARE,SAAC,GAAyB,IAAvB/B,EAAsB,EAAtBA,MAAOD,EAAe,EAAfA,SACvB,OACIC,EAAMgC,KAAI,SAAAT,GACN,OAAO,cAAC,EAAD,CAA2BA,KAAMA,EAAMvB,MAAOA,EAAOD,SAAUA,GAA7CwB,EAAKf,QCApCyB,EAAoB,WAqCXC,EAnCH,WACR,MAA0BC,mBAAS,IAAnC,mBAAOnC,EAAP,KAAcD,EAAd,KAqBA,OAhBAqC,qBAAU,WAGN,IAAMpC,EAAQqC,KAAKC,MACjBC,aAAaC,QAAQP,IAGnBjC,GAAOD,EAASC,KACrB,IAEHoC,qBAAU,WAGRG,aAAaE,QAAQR,EAAmBI,KAAKK,UAAU1C,MACtD,CAACA,IAGA,sBAAKY,UAAU,MAAf,UACI,+BACI,oBAAIA,UAAU,YAAd,SACE,cAAC,EAAD,CAAUZ,MAAOA,EAAOD,SAAUA,QAIxC,cAAC,EAAD,CAAaA,SAAUA,EAAUC,MAAOA,Q,MChCpD2C,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.7a9a6c9a.chunk.js","sourcesContent":["import { useRef } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst Controllers = ({ setToDos, toDos }) => {\n    const inputValue = useRef()\n\n    const addElement = () => {\n        const userInput = inputValue.current.value\n        inputValue.current.value = \"\"\n        setToDos(previousToDos => {\n            // returns a list\n            return [\n                // which contains all previous to-dos (if there are)\n                ...previousToDos,\n                // and the newly created to-do\n                {\n                    id: uuidv4(),\n                    content: userInput,\n                    isComplete: false\n                }\n            ]\n        })\n    }\n\n    const hitEnter = event => {\n        if (event.key === \"Enter\") addElement()\n    }\n    \n    const clearList = () => {\n        const toDosCopy = [...toDos]\n        const filteredCopy = toDosCopy.filter(toDoCopy => !toDoCopy.isComplete)\n        setToDos(filteredCopy)\n    }\n\n    const deleteList = () => {\n        setToDos([])\n    }\n\n    return (\n        <menu>\n            <div className=\"container\">\n                <input type=\"text\" ref={inputValue} onKeyDown={hitEnter} />\n                <div className=\"buttons\">\n                    <button onClick={addElement}>\n                        <i className=\"fas fa-paper-plane\"></i>\n                    </button>\n                    <button onClick={clearList}>\n                        <i className=\"fas fa-broom\"></i>\n                    </button>\n                    <button onClick={deleteList}>\n                        <i className=\"fas fa-trash-alt\"></i>\n                    </button>\n                </div>\n            </div>\n        </menu>\n    )\n}\n\nexport default Controllers\n","const ToDoElement = ({ toDo, toDos, setToDos }) => {\n    const checkTheBox = event => {\n        const toDosCopy = [...toDos]\n        const toDoCopy = toDosCopy.find(toDoCopy => toDoCopy.id === toDo.id)\n        toDoCopy.isComplete = !toDoCopy.isComplete\n        // design stuff\n        toDoCopy.isComplete ? \n            event.target.style.backgroundColor = \"#48CAE4\" \n            : event.target.style.backgroundColor = \"#fff\"\n        setToDos(toDosCopy)\n    }\n\n    return (\n        <li>\n            <input type=\"checkbox\" checked={toDo.isComplete} onChange={checkTheBox} />\n            <label>\n                <span>\n                    {toDo.content}\n                </span>\n            </label>\n        </li>\n    )\n}\n\nexport default ToDoElement\n","import ToDoElement from './ToDoElement/ToDoElement'\n\nconst ToDoList = ({ toDos, setToDos }) => {\n    return (\n        toDos.map(toDo => {\n            return <ToDoElement key={toDo.id} toDo={toDo} toDos={toDos} setToDos={setToDos} /> \n        })\n    )\n}\n\nexport default ToDoList\n","import { useState, useEffect } from 'react'\nimport Controllers from './Controllers/Controllers'\nimport ToDoList from './ToDoList/ToDoList'\n\n// Let's set a key for the local storage\nconst LOCAL_STORAGE_KEY = \"toDoList\"\n\nconst App = () => {\n    const [toDos, setToDos] = useState([])\n\n    // useEffect's first parameter is called each time a change occurs in the second parameter\n    // here it is an empty string so it will never ever change and the function will only be \n    // called once\n    useEffect(() => {\n        // Let's retrieve our data from local storage\n        // BEWARE: it is mandatory to parse it as it is stored as a string\n        const toDos = JSON.parse(\n          localStorage.getItem(LOCAL_STORAGE_KEY)\n        )\n        // we have to check if toDos is not null before to try to set it\n        if (toDos) setToDos(toDos)\n    }, [])\n\n    useEffect(() => {\n      // So each time a change occurs in toDos\n      // this will save the mods on the local storage\n      localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(toDos))\n    }, [toDos])\n\n    return (\n        <div className=\"App\">\n            <main>\n                <ul className=\"container\">\n                  <ToDoList toDos={toDos} setToDos={setToDos} />\n                </ul>\n            </main>\n            \n            <Controllers setToDos={setToDos} toDos={toDos} />  \n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app/App'\nimport './main.scss'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}